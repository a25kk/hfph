server {
    listen *:${ports:http};
    server_name ${hosts:private} www.${hosts:private};
    return 301 https://${hosts:private}$request_uri;
}

# HTTPS server
server {
    listen  *:${ports:https} ssl http2;
    server_name ${hosts:private};
    access_log ${buildout:directory}/var/log/ssl-access.log;

    root ${site:static-resources};

    auth_basic "Restricted";
    auth_basic_user_file ${buildout:directory}/etc/.htpasswd;

    ssl_certificate      ${ssl:certificate-private};
    ssl_certificate_key  ${ssl:key-private};
    ssl_verify_depth    3;

    location ~ /.well-known {
        auth_basic off;
        root ${buildout:directory}/htdocs/;
    }

    location  ~ /manage(_.+)?$ {
        deny all;
    }

        # This is the 'panic' error message page. HAProxy will redirect here
        # if all nodes are down. Other parts of the stack may choose to
        # redirect to this URL as well.
        location ${urls:fallback} {
            root ${buildout:directory}/htdocs;
            break;
        }

        # Favicon support
        location ~ ^/(apple-touch-icon|browserconfig|favicon|mstile|android-chrome|safari-pinned-tab|manifest)(.*)\.(png|xml|ico|svg|json)$ {
            root ${site:static-resources}/assets/ico;
            include ${buildout:directory}/etc/disable_logging.conf;
        }

        location /theme/ {
            root ${buildout:directory}/src/hph.sitetheme/hph/sitetheme/theme/dist/;
        }

        location /styles/ {
            try_files $uri @backend;
            include ${buildout:directory}/etc/cache_control_assets.conf;
        }
        location /scripts/ {
            try_files $uri @backend;
            include ${buildout:directory}/etc/cache_control_assets.conf;
        }
        location /assets/ {
            try_files $uri @backend;
            include ${buildout:directory}/etc/cache_control_assets.conf;
        }

        # Set expires max on static file types (make sure you are using cache busting filenames or query params):
        location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm|pdf)$ {
            try_files $uri @backend;
            include ${buildout:directory}/etc/cache_control_assets.conf;
        }
        location / {
            rewrite ^/(.*)$ /VirtualHostBase/https/${hosts:private}:${ports:https}/${sites:main}/VirtualHostRoot/$1 break;
            # Back end (for SSL content)
            proxy_pass http://cache;
            include ${buildout:directory}/etc/proxy_settings.conf;
        }
        location @backend {
            rewrite ^/(.*)$ /VirtualHostBase/https/${hosts:private}:${ports:https}/${sites:main}/VirtualHostRoot/$1 break;
            # Back end (for SSL content)
            proxy_pass http://cache;
            include ${buildout:directory}/etc/proxy_settings.conf;
        }
    }