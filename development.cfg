# Development buildout
# ====================

[buildout]
parts =
#    ${buildout:site-parts}
    instance-debug
    tmpdir
    omelette
    zopepy
    zodbupdate
    checkversions

extends =
#    buildout.d/site.cfg
    packages.cfg
    local.cfg


auto-checkout =
    ade25.base
#    ade25.fabfiles
    ade25.panelpage
    ade25.widgets
#    bobtemplates.ade25
#    collective.embedly
#    collective.z3cform.datagridfield
    hph.bulletinboard
    hph.corporatetheme
    hph.faculty
    hph.lectures
    hph.membership
    hph.policy
    hph.publications
    hph.sitecontent
    hph.sitetheme
    hph.widgets
    kk.tiles
    zodbupdate

always-checkout = force

abi-tag-eggs = true

# Override Zope instance settings to add custom packages managed by mr.developer

[instance-debug]
recipe = plone.recipe.zope2instance
http-address = 8499
user = zope-admin:admin
wsgi = on
verbose-security = on
resources = ${buildout:directory}/resources
eggs =
    ${eggs:main}
    ${eggs:custom}
    ${eggs:addon}
    ${eggs:devtools}
environment-vars =
    zope_i18n_compile_mo_files true
    TUS_ENABLED true
    TUS_TMP_FILE_DIR ${buildout:directory}/var/tmp
zope-conf-additional =
    <product-config beaker>
        session.type            file
        session.data_dir        ${buildout:directory}/var/sessions/data
        session.lock_dir        ${buildout:directory}/var/sessions/lock
        session.key             beaker.session.hph
        session.secret          9bbe8211a354a01627abfbe61c8ef9f513653428-hph
    </product-config>

# Change the site name to the appropriate value
# This variable will be used to configure the docker webserver container
[site]
sitename = hph

[tmpdir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/tmp

[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage reports
# Run: 'bin/test --coverage=coverage' and 'bin/coveragereport'
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${eggs:main}
    ${eggs:addon}
    ${eggs:devtools}

[zopepy]
recipe = zc.recipe.egg
eggs =
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

[zodbupdate]
recipe = zc.recipe.egg
eggs =
    zodbupdate
    ${eggs:main}
    ${eggs:addon}

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.ade25
    ${eggs:main}
    ${eggs:devtools}

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[i18nduder]
#handy shortcuts for i18n tasks
#duder create -l de -p my.package #creates a locales folder for de
#duder update -p my.package #rebuild-pot and syncs to all pos
#duder mo -p my.package #compiles all po files to mo
recipe = zc.recipe.egg
eggs = ${eggs:main}
       zettwerk.i18nduder

[i18nize-site]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/templates/i18nize.in
output = ${buildout:bin-directory}/i18nize-site
mode = 775
dollar = $
domain = meetshaus.blog
packagepath = ${buildout:directory}/src/meetshaus.blog/meetshaus/blog
languages = de

[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance-debug:eggs}
#target = ${buildout:directory}/src/.codeintel

[backup]
recipe = collective.recipe.backup
blob_storage = ${buildout:directory}/var/blobstorage
enable_zipbackup = true
blobziplocation = ${buildout:directory}/var/zipblobbackups
blobbackuplocation = ${buildout:directory}/var/blobstoragebackups
blobsnapshotlocation = ${buildout:directory}/var/blobstoragesnapshots
location = ${buildout:directory}/var/backups
snapshotlocation = ${buildout:directory}/var/snapshotbackups
ziplocation = ${buildout:directory}/var/zipbackups

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
